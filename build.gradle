plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3-SNAPSHOT" apply false
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "me.shedaniel.unified-publishing"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        // mappings "de.oceanlabs.mcp:mcp_snapshot:20210309-1.16.5"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }

    architectury {
        // Disable Architectury's injectables like @ExpectPlatform
        // since we don't use them.
        injectInjectables = false
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.mod_name
    }

    version = rootProject.mod_version
    group = "owmii.losttrinkets"

    repositories {
        maven { url "https://dvs1.progwml6.com/files/maven" } //JEI
        maven { url "https://maven.blamejared.com" } // Botania
        maven { url "https://maven.terraformersmc.com/releases/" } // ModMenu
    }

    tasks.withType(JavaCompile) {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        options.encoding = "UTF-8"

        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }

    if ((project.name == "fabric" || project.name == "forge") && project.version != "0.0.0") {
        unifiedPublishing {
            project {
                gameVersions = [rootProject.minecraft_version]
                gameLoaders = [project.name]
                version = project.version + "-" + project.name
                releaseType = "release"
                changelog = System.getenv("CHANGELOG") ?: "No changelog provided?"
                mainPublication remapJar
                relations {
                    depends {
                        modrinth = "architectury-api"
                    }
                    depends {
                        modrinth = "cloth-config"
                    }
                }

                var mrToken = System.getenv("MODRINTH_TOKEN")
                if (mrToken != null) {
                    modrinth {
                        token = mrToken
                        id = "yhRKzvLA"
                    }
                }
            }
        }
    }
}
