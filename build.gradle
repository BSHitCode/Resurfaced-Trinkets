plugins {
    id "dev.architectury.loom" version "1.3-SNAPSHOT"
    id "maven-publish"
}

base {
    archivesName = project.mod_name
}

version = project.mod_version
group = "owmii.losttrinkets"

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

loom {
    forge {
        mixinConfigs = [
            "losttrinkets.mixins.json"
        ]
    }
}

repositories {
    maven { url "https://dvs1.progwml6.com/files/maven" } //JEI
    maven { url "https://maven.blamejared.com" } // Botania
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "de.oceanlabs.mcp:mcp_snapshot:20210309-1.16.5"
    // mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    modCompileOnly "mezz.jei:jei-1.16.4:7.6.1.71:api"
    modRuntimeOnly "mezz.jei:jei-1.16.4:7.6.1.71"

    modCompileOnly "vazkii.botania:Botania:1.16.4-413:api"
}

processResources {
    // define properties that can be used during resource processing
    inputs.property "version", project.version

    // this will replace the property "${version}" in your mods.toml
    // with the version you've defined in your gradle.properties
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    // add some additional metadata to the jar manifest
    manifest {
        attributes([
                "Specification-Title"     : mod_name,
                "Specification-Vendor"    : 'owmii',
                "Specification-Version"   : mod_version,
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : 'owmii',
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}